<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ozstrategy.dao.userrole.RoleDao">
    <resultMap id="roleResult" type="com.ozstrategy.model.userrole.Role" autoMapping="true">
        <id column="id" property="id" javaType="long"/>
        <result column="systemViewId" javaType="java.lang.Long"/>
        <association property="systemView" column="systemViewId" select="com.ozstrategy.dao.userrole.SystemViewDao.getSystemViewById"/>
    </resultMap>
    <select id="listRoles" resultMap="roleResult"  parameterType="Map">
        select * from Role r where r.enabled=1
        <if test="keyword!=null and keyword!=''">and (r.name like CONCAT(CONCAT('%', #{keyword}), '%') or r.displayName like CONCAT(CONCAT('%', #{keyword}), '%'))</if>
        order by r.createDate desc
    </select>
    <select id="listRolesCount" resultType="java.lang.Integer" parameterType="Map">
        select count(*) from Role r
        where r.enabled=1
        <if test="keyword!=null and keyword!=''">and (r.name like CONCAT(CONCAT('%', #{keyword}), '%') or r.displayName like CONCAT(CONCAT('%', #{keyword}), '%'))</if>
    </select>
    <select id="getRoleByName" resultMap="roleResult" parameterType="java.lang.String">
        select * from Role r where r.enabled=1 and r.name=#{name}
    </select>
    <select id="getRoleById" resultMap="roleResult" parameterType="java.lang.Long">
        select * from Role r where r.enabled=1 and r.id=#{id}
    </select>
    <select id="getRoleByUserId" resultMap="roleResult" parameterType="java.lang.Long">
        select * from Role r JOIN UserRole ur on r.id=ur.roleId where ur.userId=#{userId} and r.enabled=1
    </select>
    
    
    <insert id="saveRole" parameterType="com.ozstrategy.model.userrole.Role" flushCache="true">
        <selectKey keyColumn="id" keyProperty="id" resultType="java.lang.Long">
            select LAST_INSERT_ID()
        </selectKey>
        insert into Role(id,name,description,displayName,enabled,systemViewId) values (#{id},#{name},#{description},#{displayName},#{enabled},#{systemView.id})
    </insert>
    <update id="updateRole" parameterType="com.ozstrategy.model.userrole.Role" flushCache="true">
        update Role r set 
        r.name=#{name} , 
        r.description=#{description} , 
        r.displayName=#{displayName} , 
        r.enabled=#{enabled} , 
        r.systemViewId=#{systemView.id} 
        where r.id=#{id}
    </update>
    <update id="removeRoleById" parameterType="java.lang.Long" flushCache="true">
        update Role r set r.enabled='0' where r.id=#{id}
    </update>

</mapper>